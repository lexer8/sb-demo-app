# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Docker

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"

env:
  # Use docker.io for Docker Hub if empty; otherwise, ghcr.io
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          java-package: 'jdk'
          architecture: 'x64'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
#          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

#      - name: Docker tags
#        env:
#          TAGS: ${{ steps.meta.outputs.tags }}
#        run: |
#          echo "Obtained Docker tags."
#          echo $TAGS

#      - name: Obtain GitHub tag
#        id: get_tag
#        run: |
#          if [ -n "${{ github.ref_name }}" ]; then
#            echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
#          else
#            echo "VERSION=latest" >> $GITHUB_ENV
#          fi

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
#          push: true
          tags: ${{ steps.meta.outputs.tags }}
#          tags: |
#            ${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
#            ${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Logout from Docker Hub
        run: docker logout
